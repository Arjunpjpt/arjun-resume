{"version":3,"sources":["components/home/home.js","components/message/Form.js","components/message/message.js","components/Header.js","components/parent.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","large","spacing","height","Home","classes","className","List","ListItem","alignItems","ListItemAvatar","Avatar","alt","src","ListItemText","primary","secondary","Fragment","Typography","component","variant","color","Divider","useStyles","margin","padding","textAlign","text","Form","React","useState","Grid","container","item","xs","Paper","noValidate","autoComplete","TextField","id","label","placeholder","multiline","rows","Button","Message","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","mixins","content","flexGrow","Header","useTheme","open","setOpen","handleClick","str","console","log","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Drawer","direction","to","button","key","ListItemIcon","Parent","props","callbackFunction","childData","setState","msg","state","exact","path","Component","App","window","location","href","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6jBAoBiBA,aAAW,SAAAC,GAAK,MAAK,CAClCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,QAAS,UAEXC,MAAO,CACHR,MAAOF,EAAMW,QAAQ,IACrBC,OAAQZ,EAAMW,QAAQ,QAIf,SAASE,IACpB,IAAMC,EAAUf,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAE5CC,OAAQ,CACNC,QAAS,UAEXC,MAAO,CACHR,MAAOF,EAAMW,QAAQ,IACrBC,OAAQZ,EAAMW,QAAQ,QAG1B,OACI,yBAAKI,UAAU,WACX,yBAAKA,UAAU,eACf,kBAACC,EAAA,EAAD,CAAMD,UAAWD,EAAQb,MAC/B,kBAACgB,EAAA,EAAD,CAAUC,WAAW,cACnB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,IAAI,QAAQC,IAAI,iCAE1B,kBAACC,EAAA,EAAD,CACEC,QAAQ,kBACRC,UACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAEJ,0BAAMf,UAAU,cAClB,kBAAC,IAAD,MADE,uBAC8B,6BAChC,kBAAC,IAAD,MAFE,cAEqB,6BACvB,kBAAC,IAAD,MAHE,kCAG4C,6BAC9C,kBAAC,IAAD,MAJE,6BAaZ,kBAACgB,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,OACnC,kBAACX,EAAA,EAAD,CAAUC,WAAW,cAEnB,kBAACK,EAAA,EAAD,CACEC,QAAQ,aACRC,UACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAEJ,0BAAMf,UAAU,cAAhB,qDAC2C,6BAD3C,sFAYZ,kBAACgB,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,OACnC,kBAACX,EAAA,EAAD,CAAUC,WAAW,cAEnB,kBAACK,EAAA,EAAD,CACEC,QAAQ,oBACRC,UACE,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CACAC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAEJ,0BAAMf,UAAU,cACpB,wEACQ,8BACK,0BAAMA,UAAU,cAC5B,gKAED,kBAACY,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAEJ,6BACA,0BAAMf,UAAU,cACpB,6BADI,IACE,6DAAqC,+BAG3C,0BAAMA,UAAU,cAAhB,KAAgC,uIAE9C,6BACc,kBAACY,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAEJ,0BAAMf,UAAU,cACpB,6BADI,IACE,uCADF,IACkB,+BAGtB,0BAAMA,UAAU,cAAhB,SAAoC,gDAUtC,yBAAKA,UAAU,gBAEf,kBAACC,EAAA,EAAD,CAAMD,UAAWD,EAAQb,MAC/B,kBAACgB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAIJ,kBAACG,EAAA,EAAD,CACEC,QAAQ,mBACRC,UACE,kBAAC,IAAMC,SAAP,KAEE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAJR,wGAOa,6BACZ,mHACD,6BACb,6HACD,6BAAM,mIAMA,kBAACC,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,OAEnC,kBAACX,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAIJ,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,UACE,kBAAC,IAAMC,SAAP,KAEE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAJR,sDAOa,6BACZ,8EACD,6BACb,6KACD,6BAAM,gGACN,6BAAM,qDAOA,kBAACC,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,OAEnC,kBAACX,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAIJ,kBAACG,EAAA,EAAD,CAEEE,UACE,kBAAC,IAAMC,SAAP,KAEE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAJR,gBAOa,6BACZ,oFACD,6BACb,sFACD,6BAAM,0DACN,6BAAM,+CAOA,kBAACC,EAAA,EAAD,CAASF,QAAQ,QAAQD,UAAU,OAEnC,kBAACX,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAIJ,kBAACG,EAAA,EAAD,CAEEE,UACE,kBAAC,IAAMC,SAAP,KAEE,kBAACC,EAAA,EAAD,CACEC,UAAU,OACVC,QAAQ,QACRd,UAAWD,EAAQN,OACnBsB,MAAM,eAJR,mBAOa,6BACZ,mGACD,6BACb,qM,4CClRKE,GAAYjC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBgC,OAAQjC,EAAMW,QAAQ,GACtBT,MAAO,MAGXK,MAAO,CACL2B,QAASlC,EAAMW,QAAQ,GACvBwB,UAAW,SACXL,MAAO9B,EAAMK,QAAQ+B,KAAKX,eAIf,SAASY,KACtB,IAAMvB,EAAUkB,KADa,EAEHM,IAAMC,SAAS,cAFZ,6BAQ7B,OACI,6BACN,kBAACC,GAAA,EAAD,CAAMC,WAAS,EAAC9B,QAAS,IACjB,kBAAC6B,GAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACb,kBAACC,GAAA,EAAD,CAAO7B,UAAWD,EAAQP,OAC1B,0BAAMQ,UAAWD,EAAQb,KAAM4C,YAAU,EAACC,aAAa,OAC3D,6BACE,+BACI,4BACI,6DAIJ,4BACI,4BACI,kBAACC,GAAA,EAAD,CACVC,GAAG,WACHC,MAAM,YACNC,YAAY,YACZC,WAAS,MAKP,4BACI,4BACA,kBAACJ,GAAA,EAAD,CACNC,GAAG,QACHC,MAAM,aACNC,YAAY,aACZC,WAAS,MAIP,4BACI,4BACA,kBAACJ,GAAA,EAAD,CACNC,GAAG,4BACHC,MAAM,UACNE,WAAS,EACTC,KAAK,KACLF,YAAY,UACZrB,QAAQ,eAIN,4BACI,4BACA,kBAACwB,GAAA,EAAD,CAAQxB,QAAQ,YAAYC,MAAM,WAAlC,iB,MC1ED,SAASwB,KAEpB,OACI,yBAAKvC,UAAU,oBACb,kBAACsB,GAAD,OCiBV,IAGML,GAAYjC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJQ,QAAS,QAEX8C,OAAQ,CACNC,OAAQxD,EAAMwD,OAAOC,OAAS,EAC9BC,WAAY1D,EAAM2D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ7D,EAAM2D,YAAYE,OAAOC,MACjCC,SAAU/D,EAAM2D,YAAYI,SAASC,iBAGzCC,YAAa,CACXC,WAfgB,IAgBhBhE,MAAM,eAAD,OAhBW,IAgBX,OACLwD,WAAY1D,EAAM2D,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQ7D,EAAM2D,YAAYE,OAAOC,MACjCC,SAAU/D,EAAM2D,YAAYI,SAASI,kBAGzCC,WAAY,CACVC,YAAa,IAEfC,KAAM,CACJ7D,QAAS,QAEXgD,OAAQ,CACNvD,MA7BgB,IA8BhBqE,WAAY,EACZC,WAAY,UAEdC,WAAY,CACVvE,MAlCgB,IAmChBwD,WAAY1D,EAAM2D,YAAYC,OAAO,QAAS,CAC5CC,OAAQ7D,EAAM2D,YAAYE,OAAOC,MACjCC,SAAU/D,EAAM2D,YAAYI,SAASI,kBAGzCO,YAAY,aACVhB,WAAY1D,EAAM2D,YAAYC,OAAO,QAAS,CAC5CC,OAAQ7D,EAAM2D,YAAYE,OAAOC,MACjCC,SAAU/D,EAAM2D,YAAYI,SAASC,gBAEvCW,UAAW,SACXzE,MAAOF,EAAMW,QAAQ,GAAK,GACzBX,EAAM4E,YAAYC,GAAG,MAAQ,CAC5B3E,MAAOF,EAAMW,QAAQ,GAAK,IAG9BmE,QAAQ,aACNrE,QAAS,OACTS,WAAY,SACZ6D,eAAgB,WAChB7C,QAASlC,EAAMW,QAAQ,EAAG,IACvBX,EAAMgF,OAAOF,SAElBG,QAAS,CACPC,SAAU,EACVhD,QAASlC,EAAMW,QAAQ,QAIZ,SAASwE,KAAU,IAAD,IACzBrE,EAAUkB,KACVhC,EAAQoF,cAFiB,EAGP9C,IAAMC,UAAS,GAHR,mBAGxB8C,EAHwB,KAGlBC,EAHkB,KAa/B,SAASC,EAAYC,GACnBC,QAAQC,IAAI,OAAOF,GAGrB,OACE,yBAAKzE,UAAWD,EAAQb,MACtB,kBAAC0F,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEC,SAAS,QACT9E,UAAW+E,YAAKhF,EAAQyC,OAAT,eACZzC,EAAQmD,YAAcoB,KAGzB,kBAACU,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACElE,MAAM,UACNmE,aAAW,cACXC,QAzBe,WACvBZ,GAAQ,IAyBAa,KAAK,QACLpF,UAAW+E,YAAKhF,EAAQsD,WAAT,eACZtD,EAAQwD,KAAOe,KAGlB,kBAAC,IAAD,OAEF,kBAAC1D,EAAA,EAAD,CAAYE,QAAQ,KAAKuE,QAAM,GAA/B,gBAKJ,kBAACC,EAAA,EAAD,CACExE,QAAQ,YACRd,UAAW+E,YAAKhF,EAAQ2C,QAAT,mBACZ3C,EAAQ2D,WAAaY,GADT,cAEZvE,EAAQ4D,aAAeW,GAFX,IAIfvE,QAAS,CACPP,MAAOuF,aAAI,mBACRhF,EAAQ2D,WAAaY,GADb,cAERvE,EAAQ4D,aAAeW,GAFf,MAMb,yBAAKtE,UAAWD,EAAQgE,SACtB,kBAACkB,EAAA,EAAD,CAAYE,QAhDM,WACxBZ,GAAQ,KAgDqB,QAApBtF,EAAMsG,UAAsB,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAGxD,kBAACvE,EAAA,EAAD,MAEA,kBAACf,EAAA,EAAD,KAGI,kBAAC,IAAD,CAAMuF,GAAG,KACb,kBAACtF,EAAA,EAAD,CAAUuF,QAAM,EAACC,IAAK,UAAWP,QAASX,EAAY,YAChD,kBAACmB,EAAA,EAAD,KAAe,kBAAC,IAAD,OAEf,kBAACnF,EAAA,EAAD,CAAcC,QAAS,cAKzB,kBAACO,EAAA,EAAD,MAEA,kBAAC,IAAD,CAAMwE,GAAG,YACT,kBAACtF,EAAA,EAAD,CAAUuF,QAAM,EAACC,IAAK,UAAWP,QAASX,EAAY,YACpD,kBAACmB,EAAA,EAAD,KAAe,kBAAC,IAAD,OACf,kBAACnF,EAAA,EAAD,CAAcC,QAAS,cAIzB,kBAACO,EAAA,EAAD,S,0DCrKS4E,G,YACrB,WAAYC,GAAO,IAAD,+BACd,8CAAMA,KAGVC,iBAAiB,SAACC,GACd,EAAKC,SAAS,CAACC,IAAIF,KAHnB,EAAKG,MAAO,CAACD,IAAI,IAFH,E,wEAQd,OACI,6BACI,yBAAKjG,UAAU,UACnB,kBAACoE,GAAD,OAEI,6BAGF,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAO+B,OAAK,EAACC,KAAK,IAAIvF,UAAWf,IACjC,kBAAC,KAAD,CAAOsG,KAAK,WAAYvF,UAAW0B,Y,GAnBbhB,IAAM8E,WCuB3BC,OA1Bf,WACE,OACE,yBAAKtG,UAAU,OAGV0E,QAAQC,IAAI4B,OAAOC,SAASC,MAC7B,yBAAKzG,UAAU,UACf,kBAAC,GAAD,SCCY0G,QACW,cAA7BH,OAAOC,SAASG,UAEe,UAA7BJ,OAAOC,SAASG,UAEhBJ,OAAOC,SAASG,SAASC,MACvB,2DCVNC,IAASC,OACL,kBAAC,IAAD,KAAe,kBAAC,GAAD,OACdC,SAASC,eAAe,SDyHvB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.3e532495.chunk.js","sourcesContent":["import React from 'react';\nimport './home.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ImageIcon from '@material-ui/icons/Image';\nimport WorkIcon from '@material-ui/icons/Work';\nimport AndroidIcon from '@material-ui/icons/Android';\nimport GamesIcon from '@material-ui/icons/Games';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport EmailIcon from '@material-ui/icons/Email';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nconst useStyle = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(7),\n      },\n  }));\n  \nexport default function Home() {\n    const classes = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(7),\n      },\n  }));\n    return(\n        <div className=\"homeDiv\">\n            <div className=\"profileLeft\">\n            <List className={classes.root}>\n      <ListItem alignItems=\"flex-start\">\n        <ListItemAvatar>\n          <Avatar alt=\"Arjun\" src=\"/static/images/avatar/1.jpg\" />\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Arjun Prajapati\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                  <span className=\"colorwhite\">\n                <EmailIcon/>arjunpjpt@gmail.com <br/>\n                <PhoneIcon/> 2066310910<br/>\n                <LinkedInIcon/>linkedin.com/in/arjun-prajapati<br/>\n                <GitHubIcon/>github.com/Arjunpjpt\n                </span>\n              </Typography>\n              \n            </React.Fragment>\n          }\n        />\n\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        \n        <ListItemText\n          primary=\"Education:\"\n          secondary={\n            <React.Fragment>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                  <span className=\"colorwhite\">\n                University of Washington – Tacoma (2017-2019)<br></br>\nBachelor of Science: Computer Science and Systems, \nApplied Mathematics(minor)\n</span>\n\n              </Typography>\n              \n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem alignItems=\"flex-start\">\n        \n        <ListItemText\n          primary=\"Technical Skills:\"\n          secondary={\n            <React.Fragment>\n                <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                  <span className=\"colorwhite\">\n              <u> Programming language and other skills: </u>\n               </span><br/>\n              </Typography><span className=\"colorwhite\">\n              {' Android Software Development, C, C#, CSS, HTML, Java, JavaScript, JSON, MarkLogic, MySQL, Node.JS Oracle DBMS, PostgreSQL, PHP, Python, React, ROBOTC, XML '}\n           </span>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                  <br></br>\n                  <span className=\"colorwhite\">\n              <br/> <u> Software Development Skills: </u><br/>\n               </span>\n              </Typography>\n              <span className=\"colorwhite\">  {' Agile Scrum Team Methodologies, Documentation, Git, MVC Architecture, Object Oriented Design/Programming, Unit Testing with JUnit '}\n           </span>\n<br></br>\n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                  <span className=\"colorwhite\">\n              <br/> <u>Exposed:</u> <br/>\n               </span>\n              </Typography>\n              <span className=\"colorwhite\">      {' Machine Learning, Amazon Web Services'}\n              </span>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n    </List>\n\n\n            </div>\n            <div className=\"profileRight\">\n\n            <List className={classes.root}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        \n        <ListItemText\n          primary=\"Work Experience:\"\n          secondary={\n            <React.Fragment>\n          \n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n               Software Engineer at HCL under contract to The Boeing Company,  Bellevue, WA - (Sept 2019 - Present)  \n              </Typography><br/>\n              {'•\tDeveloped RESTful web services using Spring Boot MVC and tested with Postman using HTTP request methods.'}\n              <br/>\n{'•\tData manipulation, handling large OData Schema converting into valid JSON Schema and CSV’s for data modeling.'}\n<br/>{'•Created a single page web application using React.js with features of faceted search, and data visualization using D3.'}\n            </React.Fragment>\n          }\n        />\n   \n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <AndroidIcon />\n          </Avatar>\n        </ListItemAvatar>\n        \n        <ListItemText\n          primary=\"Projects:\"\n          secondary={\n            <React.Fragment>\n          \n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\nWessenger (Weather and Messaging app for Android):\n              </Typography><br/>\n              {'•\tDeveloped in a group of four people using Agile(Scrum) Methodology.'}\n              <br/>\n{'•\tCoded in Java for front-end UI and developed RESTful API’s and also connected with different third party API’s (Weather, Push Notification, Google Map).'}\n<br/>{'•Deployed on Heroku, used Node JS for backend and PostgreSQL to store and retrieve data.'}\n<br/>{' App Demo: www.youtube.com/watch?v=u1JCXcK-G2A'}\n            </React.Fragment>\n          }\n        />\n   \n      </ListItem>\n\n      <Divider variant=\"inset\" component=\"li\" />\n      \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <GamesIcon />\n          </Avatar>\n        </ListItemAvatar>\n        \n        <ListItemText\n         \n          secondary={\n            <React.Fragment>\n          \n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\nPUBG In 90s:\n              </Typography><br/>\n              {'•\tMulti-level battle game developed for web using JavaScript, HTML and CSS.'}\n              <br/>\n{'•\tImplemented Dijkstra Algorithm and some Mathematical formula for AI’s.'}\n<br/>{'Game Trailer: www.youtube.com/watch?v=BnAui6bydJA&t=20s'}\n<br/>{'Game Site: arjunpjpt.github.io/pubg-1990'}\n            </React.Fragment>\n          }\n        />\n   \n      </ListItem>\n\n      <Divider variant=\"inset\" component=\"li\" />\n      \n      <ListItem>\n        <ListItemAvatar>\n          <Avatar>\n            <DeviceHubIcon />\n          </Avatar>\n        </ListItemAvatar>\n        \n        <ListItemText\n         \n          secondary={\n            <React.Fragment>\n          \n              <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\nUWT Blood Bank:\n              </Typography><br/>\n              {'•Designed and developed database application for a blood bank with front-end Web interface.'}\n              <br/>\n{'•\tUsed Complex SQL Queries for table relationship, Boyce-codd Normal Form technique for Database Normalization, ER diagram, HTML, CSS and PHP for the documentation and presentation.'}\n\n            </React.Fragment>\n          }\n        />\n   \n      </ListItem>\n    </List>\n            </div>\n         \n        </div>\n    );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 600\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function Form() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"Controlled\");\n\n  const handleChange = event => {\n    setValue(event.target.value);\n  };\n\n  return (\n      <div>\n<Grid container spacing={12}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <table>\n            <tr>\n                <td>\n                    Message To : Arjun Prajapati\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <TextField\n          id=\"fullname\"\n          label=\"Full Name\"\n          placeholder=\"Full Name\"\n          multiline\n        />\n             </td>\n            </tr>\n\n            <tr>\n                <td>\n                <TextField\n          id=\"email\"\n          label=\"Your Email\"\n          placeholder=\"Your Email\"\n          multiline\n        />\n                </td>\n            </tr>\n            <tr>\n                <td>\n                <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Message\"\n          multiline\n          rows=\"10\"\n          placeholder=\"Message\"\n          variant=\"outlined\"\n        /> \n                </td>\n            </tr>\n            <tr>\n                <td>\n                <Button variant=\"contained\" color=\"primary\">\n        Send\n      </Button>\n                </td>\n            </tr>\n        </table>\n        \n        \n        \n        \n      </div>\n    </form>\n\n          </Paper>\n        </Grid>\n      </Grid>\n\n      </div>\n   \n  );\n}\n","import React from 'react';\nimport Form from './Form.js';\nimport './message.css'\nexport default function Message() {\n\n    return(\n        <div className=\"messageComponent\">\n          <Form/>\n        </div>\n    );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport {Switch,BrowserRouter as Router, Link , Route} from 'react-router-dom';\nimport Home from './home/home.js';\nimport Message from './message/message.js';\n\nconst drawerWidth = 240;\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  function handleClick(str){\n    console.log(\"----\"+str);\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            My Profile\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n      \n        <List>\n    \n\n            <Link to=\"/\" >\n        <ListItem button key={\"Profile\"} onClick={handleClick(\"Profile\")}>\n              <ListItemIcon>{<AccountBoxIcon /> }</ListItemIcon>\n              \n              <ListItemText primary={\"Profile\"} />\n            </ListItem>\n            </Link>\n\n            \n            <Divider />\n           \n            <Link to=\"/message\" >\n            <ListItem button key={\"Message\"} onClick={handleClick(\"Message\")}>\n              <ListItemIcon>{<MessageIcon /> }</ListItemIcon>\n              <ListItemText primary={\"Message\"} />\n            </ListItem>\n            </Link>\n           \n            <Divider />\n          \n        </List>\n        \n        \n      </Drawer>\n     \n    \n    </div>\n  );\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './home/home.js';\nimport Message from './message/message.js';\nimport Header from './Header.js'\nimport {Switch,BrowserRouter as Router, Link , Route} from 'react-router-dom';\nexport default class Parent extends React.Component {\nconstructor(props){\n    super(props);\n    this.state ={msg:\"\"}\n}\ncallbackFunction=(childData)=>{\n    this.setState({msg:childData})\n}\n  render() {\n    return (\n        <div>\n            <div className=\"Header\">\n        <Header />\n        </div>\n            <div>\n                  \n\n          <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/message\"  component={Message}></Route>\n          </Switch>\n         \n          </div>\n        </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header.js'\nimport Parent from './components/parent.js'\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n      \n        {console.log(window.location.href)} \n        <div className=\"Parent\">\n        <Parent />\n        </div>\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      {/* </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(\n    <BrowserRouter><App/></BrowserRouter>\n    ,document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}